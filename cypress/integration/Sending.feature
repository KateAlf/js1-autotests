Feature: Отправка данных на сервер

  Background: Открываем главную страницу сайта
    Given я нахожусь на главной странице сайта
    Given выбираю изображение для загрузки

  Scenario: После заполнения всех данных, при нажатии на кнопку «Отправить», все данные из формы отправляются на сервер
    When в поле ".text__hashtags" ввожу текст "#фото"
    When в поле ".text__description" ввожу текст "Комментарий"
    When нажимаю на кнопку "Опубликовать"
    Then форма успешно отправлена с комментарием "Комментарий", эффектом "none" и тэгами "#фото"
    Then отображается сообщение с текстом "Изображение успешно загружено"
    # на время выполнения запроса к серверу кнопка «Отправить» блокируется.

  Scenario: Страница реагирует на неправильно введённые хэш-тэги
    When в поле ".text__hashtags" ввожу текст "#цветок #море #еда #солнце #лето #осень"
    Then сообщение об ошибке отображается
    When очищаю поле ".text__hashtags"
    Then сообщение об ошибке не отображается

    # не всегда есть валидация на длинну текста
#  Scenario: Страница реагирует на неправильно введённый комментарий
#    When в поле ".text__description" ввожу текст "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla diam ligula, congue et tortor eget, lacinia mattis turpis. Vivamus vitae fringilla vel."
#    Then отображается сообщение об ошибке или ограничение на ввод
#    When очищаю поле ".text__description"
#    Then сообщение об ошибке не отображается

  Scenario: При успешной отправке формы форма редактирования изображения закрывается, все данные, введённые в форму, и контрол фильтра приходят в исходное состояние:
    When в поле ".text__hashtags" ввожу текст "#фото"
    When в поле ".text__description" ввожу текст "Комментарий"
    When нажимаю на кнопку "Опубликовать"
    When форма успешно отправлена
    Then отображается сообщение с текстом "Изображение успешно загружено"
    When нажимаем клавишу "esc"
    Given выбираю изображение для загрузки
    Then появляется окно загрузки изображения
    Then выбран эффект "none"
    Then размер изображения 100%
    Then поле ".text__description" содержит текст ""
    Then поле ".text__hashtags" содержит текст ""



#3.4. Если отправка данных прошла успешно, показывается соответствующее сообщение. Разметку сообщения, которая находится в блоке #success внутри шаблона template, нужно разместить перед закрывающим тегом </body>. Сообщение должно исчезать после нажатия на кнопку .success__button, по нажатию на клавишу Esc и по клику на произвольную область экрана за пределами блока с сообщением.
#
#Предыстория: я нахожусь на главной странице сайта (лента изображений)
#Дано: Открываем ленту сайта Кексаграм
#Когда нажимаю на кнопку загрузить
#Тогда появляется окно загрузки файла
#Когда выбираю любой графический файл с помощью стандартного контрола загрузки файла #upload-file
#Тогда изображение подгружается в появившемся окне
#Когда показывается форма редактирования изображения
#у элемента .img-upload__overlay удаляется класс hidden
#body задаётся класс modal-open.
#Тогда по умолчанию выбран фильтр оригинал effect-none
#И у изображения стоит класс effects__preview--none
#Когда выбираю радиокнопку effect-phobos
#то у изображения появляется класс effects__preview--phobos
#Когда перемещаю ползунок на середину слайдера
#то CSS-стили картинки внутри .img-upload__preview  меняются style=filter: blur(1.5px);
#Нажимаю на поле ваш комментарий
#Ввожу Это мой комментарий
#Нажимаю на поле хештег
#Ввожу #хештег
#Нажимаю на кнопку отправить
#Показывается сообщение об успешной отправке блоке #success внутри шаблона template, перед закрывающим тегом </body>.
#Когда нажимаю на кнопку .success__button,
#Или по нажатию на клавишу Esc
#Или по клику на произвольную область экрана за пределами блока с сообщением
#То сообщение исчезает

#3.5. Если при отправке данных произошла ошибка запроса, нужно показать соответствующее сообщение. Разметку сообщения, которая находится в блоке #error внутри шаблона template, нужно разместить перед закрывающим тегом </body>. Сообщение должно исчезать после нажатия на кнопки .error__button, по нажатию на клавишу Esc и по клику на произвольную область экрана за пределами блока с сообщением. В таком случае вся введённая пользователем информация сохраняется, чтобы у него была возможность отправить форму повторно.
#
#Предыстория: я нахожусь на главной странице сайта (лента изображений)
#Дано: Открываем ленту сайта Кексаграм
#Когда нажимаю на кнопку загрузить
#Тогда появляется окно загрузки файла
#Когда выбираю любой графический файл с помощью стандартного контрола загрузки файла #upload-file
#Тогда изображение подгружается в появившемся окне
#Когда показывается форма редактирования изображения
#у элемента .img-upload__overlay удаляется класс hidden
#body задаётся класс modal-open.
#Тогда по умолчанию выбран фильтр оригинал effect-none
#И у изображения стоит класс effects__preview--none
#Когда выбираю радиокнопку effect-phobos
#то у изображения появляется класс effects__preview--phobos
#Когда перемещаю ползунок на середину слайдера
#то CSS-стили картинки внутри .img-upload__preview  меняются style=filter: blur(1.5px);
#Нажимаю на поле ваш комментарий
#Ввожу Это мой комментарий
#Нажимаю на поле хештег
#Ввожу #хештег
#Нажимаю на кнопку отправить
#Если при отправке данных произошла ошибка запроса
#То показывается сообщение сообщение об ошибке в блоке #error внутри шаблона template, перед закрывающим тегом </body>
#Когда нажимаю на кнопку. error__button,
#Или по нажатию на клавишу Esc
#Или по клику на произвольную область экрана за пределами блока с сообщением
#То сообщение исчезает
#И вся введённая пользователем информация сохраняется

#3.6. Нажатие на кнопку #upload-cancel приводит к закрытию формы и возвращению всех данных и контрола фильтра к исходному состоянию (описано в пункте 3.3). Поле загрузки фотографии, стилизованное под букву «О» в логотипе, очищается.
#
#Предыстория: я нахожусь на главной странице сайта (лента изображений)
#Дано: Открываем ленту сайта Кексаграм
#Когда нажимаю на кнопку загрузить
#Тогда появляется окно загрузки файла
#Когда выбираю любой графический файл с помощью стандартного контрола загрузки файла #upload-file
#Тогда изображение подгружается в появившемся окне
#Когда показывается форма редактирования изображения
#у элемента .img-upload__overlay удаляется класс hidden
#body задаётся класс modal-open.
#Тогда по умолчанию выбран фильтр оригинал effect-none
#И у изображения стоит класс effects__preview--none
#Когда нажимаю на кнопку #upload-cancel
#То форма закрывается
#Возвращению всех данных к исходному состоянию
#И поле загрузки фотографии, стилизованное под букву «О» в логотипе, очищается
